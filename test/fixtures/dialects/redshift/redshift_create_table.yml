# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 7d3fe19e4caf58d383de1e5d252eb2b50348dfcb5fa8a3a0a44196995e2453ce
file:
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: t1
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - data_type:
          keyword: INTEGER
      - column_constraint_segment:
        - keyword: PRIMARY
        - keyword: KEY
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - end_bracket: )
    - table_constraint:
      - keyword: DISTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
      - keyword: SORTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: t1
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - data_type:
          keyword: INTEGER
      - column_constraint_segment:
        - keyword: PRIMARY
        - keyword: KEY
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - column_attribute_segment:
        - keyword: GENERATED
        - keyword: BY
        - keyword: DEFAULT
        - keyword: AS
        - keyword: IDENTITY
        - bracketed:
          - start_bracket: (
          - numeric_literal: '1'
          - comma: ','
          - numeric_literal: '1'
          - end_bracket: )
      - end_bracket: )
    - table_constraint:
      - keyword: DISTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
      - keyword: SORTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: t1
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - data_type:
          keyword: INTEGER
      - column_constraint_segment:
        - keyword: PRIMARY
        - keyword: KEY
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - comma: ','
      - column_reference:
          naked_identifier: col3
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - comma: ','
      - column_reference:
          naked_identifier: col4
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - comma: ','
      - column_reference:
          naked_identifier: col5
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - comma: ','
      - column_reference:
          naked_identifier: col6
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - end_bracket: )
    - table_constraint:
      - keyword: DISTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
      - keyword: COMPOUND
      - keyword: SORTKEY
      - bracketed:
        - start_bracket: (
        - column_reference:
            naked_identifier: col4
        - comma: ','
        - column_reference:
            naked_identifier: col5
        - comma: ','
        - column_reference:
            naked_identifier: col6
        - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: t1
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - data_type:
          keyword: INTEGER
      - column_constraint_segment:
        - keyword: PRIMARY
        - keyword: KEY
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - column_constraint_segment:
          keyword: REFERENCES
          table_reference:
            naked_identifier: t2
          bracketed:
            start_bracket: (
            column_reference:
              naked_identifier: col1
            end_bracket: )
      - end_bracket: )
    - table_constraint:
      - keyword: DISTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
      - keyword: SORTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
        naked_identifier: t1
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - data_type:
          keyword: INTEGER
      - column_constraint_segment:
        - keyword: PRIMARY
        - keyword: KEY
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - end_bracket: )
    - table_constraint:
      - keyword: DISTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
      - keyword: SORTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TEMPORARY
    - keyword: TABLE
    - table_reference:
        naked_identifier: t1
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - data_type:
          keyword: INTEGER
      - column_constraint_segment:
        - keyword: PRIMARY
        - keyword: KEY
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
